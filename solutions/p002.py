#
# Solution for Project Euler Problem 2
#
# Each new term in the Fibonacci sequence is generated by adding
# the previous two terms. By starting with 1 and 2, the first 10 terms will be:
#
# 1, 2, 3, 5, 8, 13, 21, 34, 55, 89, ...
#
# By considering the terms in the Fibonacci sequence whose values do
# not exceed four million, find the sum of the even-valued terms.
#


def sum_fib(limit):
    return sum([x for x in fib_list(limit) if x % 2 == 0])


def fib_list(limit):
    temp_list = [1, 2]

    while True:
        n_val = temp_list[len(temp_list) - 1] + temp_list[len(temp_list) - 2]
        temp_list.append(n_val)
        if temp_list[len(temp_list) - 1] >= limit:
            break

    return temp_list


if __name__ == "__main__":
    print(sum_fib(4000000))
